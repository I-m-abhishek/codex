import Head from 'next/head'
import Image from 'next/image' 
import Link from 'next/link'
import { Inter } from 'next/font/google'


const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  return (
    <>
      <Head>
        <title>CodeX</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main>
        <div className="h-screen flex" style={{
          backgroundImage:
            ' url("./wave-haikei-new.svg")',
        }}> 
          <div className='sm:basis-2/3'>
          <div className='rounded-xl mx-2  flex justify-center items-center'>
          <span className='leading-normal text-center text-4xl md:text-8xl md:leading-normal sm:text-7xl sm:leading-normal lg:text-8xl xl:text-9xl lg:leading-normal font-black bg-clip-text text-[#FFFDD0] mt-2 2xl:mt-10'>CodeX</span>
          </div>
          <div className='flex items-center justify-center'>
          <p className='text-white hidden md:block m- sm:mr-10 md:mr-7 lg:mr-10 sm:ml-8 md:ml-13  xl:ml-24 text-2xl text-justify m-6 md:mt-4 xl:mt-6 2xl:mt-11'>
         Discover the world of coding at <Link className='font-bold text-[#FFFDD0]' href="/">CodeX</Link>, where knowledge meets innovation. Dive into our collection of insightful blogs that cater to all levels of expertise. From beginner-friendly tutorials to advanced programming insights, <Link className='font-bold text-[#FFFDD0]' href="/">CodeX</Link>  is your ultimate resource for staying updated, enhancing skills, and connecting with a vibrant coding community. Join us on a journey of continuous learning and exploration in the dynamic realm of coding.
          </p>
          <p className='text-white md:hidden sm:mr-10 sm:ml-8 md:ml-13  lg:ml-20 text-2xl text-justify m-6 '>
          Explore coding at <Link className='font-bold text-[#FFFDD0]' href="/">CodeX</Link>, merging knowledge with innovation. Delve into our diverse blog collection, catering to all skill levels. From beginner tutorials to advanced insights, <Link className='font-bold text-[#FFFDD0]' href="/">CodeX</Link> is your go-to resource. Join our vibrant coding community for continuous learning and exploration.
          </p>
          </div>
          </div>
          <div className='sm:basis-1/3 hidden sm:block sm:mr-5 sm:mt-28 md:mt-24 md:mr-10 lg:mr-24 lg:mt-20 xl:mt-16 2xl:mt-14'>
            
          <svg id="sw-js-blob-svg" className='md:h-72 md:w-72 lg:h-96 lg:w-96' viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg" version="1.1">
      <defs>
       <pattern id="pattern1" height="100%" width="100%" patternContentUnits="objectBoundingBox">
          <image height="1" width="1" preserveAspectRatio="none" xlinkHref="./codex-1.jpg" />
        </pattern>
      </defs>
      <path
        fill="url(#pattern1)"
        d="M24.5,-36.4C31.2,-33.7,35.8,-26.1,37.5,-18.3C39.2,-10.5,38,-2.6,37,5.4C36,13.5,35.3,21.7,31.4,28.3C27.4,34.8,20.3,39.7,12.3,42.2C4.4,44.6,-4.3,44.6,-12.3,42.1C-20.2,39.6,-27.3,34.8,-31.6,28.3C-36,21.8,-37.4,13.7,-38.3,5.7C-39.1,-2.3,-39.4,-10.2,-36.5,-16.8C-33.7,-23.5,-27.9,-28.9,-21.3,-31.6C-14.7,-34.3,-7.3,-34.4,0.8,-35.5C8.9,-36.7,17.7,-39.1,24.5,-36.4Z"
        width="100%"
        height="100%"
        transform="translate(50 50)"
        strokeWidth="0"
        style={{ transition: 'all 0.3s ease 0s' }}
      />
    </svg>

          </div>                    
        
        </div>
        <div className='bg-white p-1  sm:p-2 sm:pl-20 sm:pr-20'>
       
        <div className='bg-white'>
        
        
         

          <div className='flex flex-col md:flex-row bg-white'>
             <div className='m-2'>
            <img className='rounded' src="./home-page-1.jpg" alt="CodeX" />
             </div>
             <div className='m-2'>
            <img className='rounded' src="./home-page-2.jpg" alt="CodeX" />
             </div>
             </div>
            <hr className='m-7 border-2 border-blue-500 cursor-pointer hover:border-red-500 duration-500' />

         <div className=''>
          <div className='float-left w-1/3 h-1/3 m-2 mt-5 mr-5'>
          <img className='flex rounded-md' src="./C++.webp" alt="codeX" />
          </div>

           <div  className='m-2'>
               <h1 className='font-bold text-center text-xl mb-2'>Mastering Competitive Programming in C++: Techniques and Strategies for Success</h1>
               <hr className=' border-black cursor-pointer'/>
                <p className='text-lg'>Competitive programming requires a combination of strong problem-solving skills, algorithmic knowledge, and efficient coding techniques. Here are some best techniques to conquer competitive programming in C++:
                <br/>
    

<strong>1.Master the Basics:</strong> Ensure you have a solid understanding of basic programming concepts such as variables, loops, conditional statements, functions, and data types in C++.
<br />
<strong>2.Learn Standard Template Library (STL):</strong> STL provides a rich set of data structures (like vectors, queues, stacks, sets, maps) and algorithms (like sorting, searching, and manipulating elements) that can greatly simplify coding in competitive programming.
<br />
<strong>3.Understand Algorithms and Data Structures:</strong> Gain proficiency in fundamental algorithms and data structures such as sorting algorithms (e.g., quicksort, mergesort), searching algorithms (e.g., binary search), dynamic programming, graph algorithms (e.g., BFS, DFS), trees, and heaps.

<br />
<strong>4.Practice Problem Solving:</strong> Regularly solve practice problems on online coding platforms like Codeforces, LeetCode, HackerRank, or CodeChef. Start with easier problems and gradually move to more challenging ones as you build confidence.

<br />
<strong>5.Analyze and Understand Solutions:</strong> After solving problems, analyze other people's solutions to learn new techniques and improve your understanding of algorithms and data structures.

<br />
<strong>6.Implement Algorithms and Data Structures:</strong> Practice implementing algorithms and data structures from scratch. This helps reinforce your understanding and improves your coding skills.

<br />
<strong>7.Use Efficient Coding Techniques:</strong> Write clean, concise, and efficient code. Avoid redundant code, optimize time and space complexity, and make use of C++ language features like operator overloading, templates, and inline functions.

<br />
<strong>8.Learn Greedy and Dynamic Programming Techniques:</strong> These are two important problem-solving paradigms often used in competitive programming. Understand the principles behind greedy algorithms and dynamic programming, and practice solving problems using these techniques.

<br />
<strong>9.Participate in Contests:</strong> Take part in coding contests regularly to simulate real competition scenarios and improve your speed and accuracy in problem-solving.

<br />
<strong>10.Stay Updated and Keep Practicing:</strong> Stay updated with new algorithms, techniques, and problem-solving strategies. Keep practicing regularly to maintain and improve your skills.
<br />
<br />
Remember, consistent practice and continuous learning are key to mastering competitive programming in C++. Keep challenging yourself with new problems and seek feedback to identify areas for improvement.</p>
           </div>
         </div>
         
         <br />
         <div className=''>
          <div className='float-right w-1/3 h-1/3 m-2 mt-5 ml-5'>
          <img className='flex rounded-md' src="https://images.unsplash.com/photo-1542435503-956c469947f6?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" alt="codeX" />
          </div>

           <div  className='m-2'>
               <h1 className='font-bold text-center text-xl mb-2'>Learn the new way of doing coding</h1>
               <hr className=' border-black cursor-pointer'/>
                <p className='text-lg'>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Eligendi maiores enim dolor qui quaerat suscipit laboriosam quia nam, pariatur distinctio fugit expedita aliquid totam debitis vero doloribus asperiores exercitationem dignissimos porro possimus repellendus quae! Odio quam quaerat in asperiores provident pariatur itaque dolores quo, excepturi quasi porro quisquam vel, voluptatum consequatur illum earum corrupti voluptatem architecto illo inventore, ipsum doloremque sequi repellendus accusantium. Similique facilis at asperiores earum exercitationem quidem hic, eligendi maxime accusantium nisi quibusdam ea ad, tenetur officiis architecto vitae! Consectetur ex magnam consequatur inventore eum sapiente voluptatem cupiditate nobis alias corporis quia ut ducimus iste pariatur quo officiis sequi et placeat eos odio accusamus, soluta dicta? Incidunt, libero vitae. Illo non maxime asperiores omnis at harum, qui deserunt repellendus laudantium ullam sit accusantium porro impedit adipisci, facere corrupti dolorum vero alias. Minus modi impedit at eum quod illum, maiores maxime dolor neque incidunt quae repellendus perferendis non ex quia voluptas, assumenda magnam quo excepturi reiciendis ipsam, ad totam voluptatem sint? Porro, blanditiis aliquam eligendi quaerat aspernatur ipsum ipsam provident? Saepe nisi, laudantium expedita minus, maxime aliquid eligendi et fuga ipsum ut earum? Dignissimos optio tempora enim vero maiores in adipisci nulla obcaecati saepe, dicta veniam perspiciatis consectetur quibusdam repellendus molestiae a incidunt reiciendis harum facere tempore porro recusandae natus dolore eum. Dolor sit molestiae excepturi voluptate eius magni voluptatem, reprehenderit totam ut voluptates aut eaque porro numquam inventore iure vel maiores, esse culpa quod facilis cupiditate! Consequuntur officia voluptatum ducimus deserunt minima quaerat maxime sed repudiandae consectetur odit facilis impedit sequi ipsa nostrum provident, illo consequatur eum mollitia soluta id modi voluptas pariatur molestias fugiat? Quos id labore nobis laboriosam consequatur asperiores repudiandae quidem corrupti, incidunt nam dolore blanditiis voluptas illo, itaque laborum voluptates. Accusantium minima odio aliquam ab, voluptatibus quas culpa officia non, nihil molestiae officiis.</p>
           </div>
         </div>
         
         
         
         
        
        
         </div>
         </div>
      </main>
    </>
  )
}
